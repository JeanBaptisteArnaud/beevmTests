/*
 * Globales.h
 *
 *  Created on: 18 dï¿½c. 2015
 *      Author: Arnaud Jean-Baptiste
 */

#ifndef DATASTRUCTURES_VMMEMORY_H_
#define DATASTRUCTURES_VMMEMORY_H_

// this should manage all the raw access memory

#define NULL 0
#define  _strongPointersSize(pointer) 0

typedef struct header_t {
	unsigned char size;
	unsigned short hash;
	unsigned long * behavior;
	unsigned char flags;
} header_t;

#define HEADER_OF(obj) (header_t*)(((ulong)&obj)-8)


typedef unsigned long ulong;

extern unsigned long *debugFrameMarker;
extern unsigned long *MEM_anyCompiledMethodInFromSpace;
extern unsigned long *MEM_checkNewNativizedCompiledMethods;
extern unsigned long *MEM_polymorphicMethodCacheReferesToNewCM;
extern unsigned long **MEM_JIT_globalMethodCache;
extern unsigned long *MEM_JIT_codeCachePointer;
extern unsigned long *MEM_globalFramePointerToWalkStack;
extern unsigned long *nil;
extern unsigned long *stTrue;
extern unsigned long *stFalse;



ulong ** mockHNil();
ulong ** mockHTrue();
char * mockHArray(char *);

//done
ulong _basicAt(ulong *object, int index);
void  _basicAtPut(ulong *object, int index, unsigned long value);
ulong _basicSetSize(ulong *object, ulong size);

unsigned long memoryAt(unsigned long pointer);
void memoryAtPut(unsigned long * pointer, unsigned long value);
//SendInliner
bool _isProxy(ulong *object);
bool isArray(ulong *object);
ulong size(ulong *object);
ulong asOop(ulong *object);
ulong oop(ulong *object);

ulong * _proxee(ulong *object);
ulong _size(ulong *object);
void _beNotInRememberedSet(ulong *object);
ulong _decommit(ulong limit, ulong delta);
ulong * _asObject(ulong * object);
ulong * _asPointer(ulong object);
ulong _sizeInBytes(ulong * object);
ulong _headerSizeInBytes(ulong * object);

ulong _beExtended(ulong *object);
ulong _extendedSize(ulong *object, ulong size);
ulong _framePointer();
void _beNotInRememberSet(ulong *object);
ulong _size(ulong *object);

#endif /* DATASTRUCTURES_VMMEMORY_H_ */
